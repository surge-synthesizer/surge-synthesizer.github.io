name: Deploy

on:
  workflow_dispatch:
  push:
    branches: [master]

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  BUILD_PATH: "."

jobs:
  Build:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "*"
          check-latest: true
          cache: "pnpm"
          cache-dependency-path: pnpm-lock.yaml

      - name: Configure GitHub Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Install node_modules
        run: |
          pnpm install --frozen-lockfile

      - name: Astro build
        run: |
          pnpm build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v4
        with:
          path: ${{ env.BUILD_PATH }}/dist

  PDF:
    runs-on: ubuntu-latest
    needs: Build
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "*"
          check-latest: true
          cache: "pnpm"
          cache-dependency-path: pnpm-lock.yaml

      - name: Install node_modules
        run: |
          pnpm install --frozen-lockfile
          pnpm puppeteer browsers install chrome

      - name: Run server
        run: |
          pnpm dev &
          echo $! > dev_server.pid

      - name: Wait for server
        run: |
          echo "Waiting for dev server on http://localhost:4321/manual-xt/ ..."
          for i in {1..30}; do
            if curl --output /dev/null --silent --head --fail http://localhost:4321/manual-xt/; then
              echo "Server is up!"
              break
            fi
            echo "Waiting... ($i)"
            sleep 2
          done

      - name: Build PDF
        run: |
          echo 0 | sudo tee /proc/sys/kernel/apparmor_restrict_unprivileged_userns
          pnpm pdf

      - name: Shutdown server
        if: always()
        run: |
          if [ -f dev_server.pid ]; then
            kill $(cat dev_server.pid) || true
            rm dev_server.pid
          fi

      - name: Release
        run: |
          gh release delete surge-xt-manual -y
          gh release create surge-xt-manual dist/Surge-XT-Manual.pdf -t "Surge XT Manual" -n "PDF version of the Surge XT Manual"

  Deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: Build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
