---
const { manual } = Astro.props;
---

<style>
    #nav_wrapper {
        @apply sticky top-0 z-50 flex select-none list-none place-content-center whitespace-nowrap bg-accentOrange;
    }
    #nav {
        @apply flex flex-row flex-wrap place-content-center items-center md:gap-2 bg-accentOrange p-0;
    }
    li {
        @apply relative bg-accentOrange;
    }
    a {
        @apply flex w-full rounded bg-accentOrange p-2 text-lg font-bold leading-none text-black no-underline hover:cursor-pointer hover:bg-black hover:text-accentOrange;
    }
    menu {
        @apply fixed left-0 hidden w-full flex-col gap-2 overflow-y-auto rounded bg-accentOrange p-2 shadow-lg shadow-black md:left-auto md:w-fit;
    }
</style>

<div id="nav_wrapper">
    <nav id="nav">
        {
            manual ? (
                <li>
                    <a id="nav_toc">â‰¡</a>
                </li>
            ) : (
                ""
            )
        }

        <li>
            <a id="nav_home" href="/">Home</a>
        </li>

        <li class="li_documentation">
            <a id="nav_documentation">Documentation</a>
            <menu id="documentation_options">
                <li><a href="/changelog">Changelog</a></li>
                <li><a href="/manual-xt">Manual</a></li>
                <li><a href="/rack_xt_manual">VCV Modules Manual</a></li>
                <li><a href="/tuning-guide">Tuning Guide</a></li>
                <li><a href="/accessibility">Accessibility</a></li>
                <li>
                    <a
                        href="https://github.com/surge-synthesizer/surge-synthesizer.github.io/wiki/Virus-Warnings-on-Windows"
                        >Virus Warnings</a
                    >
                </li>
            </menu>
        </li>

        <li>
            <a id="nav_extras">Extras</a>
            <menu id="extras_options">
                <li><a href="/skin-library">Skin Library</a></li>
                <li>
                    <a
                        href="https://github.com/surge-synthesizer/surge-synthesizer.github.io/wiki"
                        >Wiki</a
                    >
                </li>
                <li><a href="/clap">About CLAP</a></li>
            </menu>
        </li>

        <li>
            <a id="nav_about">About</a>
            <menu id="about_options">
                <li><a href="/reviews-media">Reviews & Media</a></li>
                <li><a href="/about">History</a></li>
                <li><a href="/feedback">Contact</a></li>
                <li>
                    <a href="https://github.com/surge-synthesizer/surge"
                        >Source Code</a
                    >
                </li>
            </menu>
        </li>
    </nav>
</div>

<script>
    const hide = (element: any) => {
        if (element !== null) {
            element.style.display = "none";
        }
    };

    const show = (element: any) => {
        if (element !== null) {
            element.style.display = "flex";
        }
    };

    const check = (title, list) => {
        if (title !== null && list !== null) {
            if (window.getComputedStyle(list).display === "none") {
                show(list);
                title.setAttribute("aria-expanded", "true");
            } else {
                hide(list);
                title.setAttribute("aria-expanded", "false");
            }
        }
    };

    const addTouchListeners = () => {
        document
            .getElementById("nav_toc")
            ?.addEventListener("mousedown", () => {
                check(
                    document.getElementById("nav_toc"),
                    document.getElementById("toc_options"),
                );
            });

        document
            .getElementById("nav_documentation")
            ?.addEventListener("mousedown", () => {
                check(
                    document.getElementById("nav_documentation"),
                    document.getElementById("documentation_options"),
                );
                hide(document.getElementById("extras_options"));
                hide(document.getElementById("about_options"));
            });

        document
            .getElementById("nav_extras")
            ?.addEventListener("mousedown", () => {
                hide(document.getElementById("documentation_options"));
                check(
                    document.getElementById("nav_extras"),
                    document.getElementById("extras_options"),
                );
                hide(document.getElementById("about_options"));
            });

        document
            .getElementById("nav_about")
            ?.addEventListener("mousedown", () => {
                hide(document.getElementById("documentation_options"));
                hide(document.getElementById("extras_options"));
                check(
                    document.getElementById("nav_about"),
                    document.getElementById("about_options"),
                );
            });
    };

    const addDesktopListeners = () => {
        document
            .getElementById("nav_home")
            ?.addEventListener("mouseenter", () => {
                hide(document.getElementById("documentation_options"));
                hide(document.getElementById("extras_options"));
                hide(document.getElementById("about_options"));
            });

        document
            .getElementById("nav_toc")
            ?.addEventListener("mouseenter", () => {
                hide(document.getElementById("documentation_options"));
                hide(document.getElementById("extras_options"));
                hide(document.getElementById("about_options"));
            });

        document
            .getElementById("nav_documentation")
            ?.addEventListener("mouseenter", () => {
                show(document.getElementById("documentation_options"));
                hide(document.getElementById("extras_options"));
                hide(document.getElementById("about_options"));
            });

        document
            .getElementById("nav_extras")
            ?.addEventListener("mouseenter", () => {
                hide(document.getElementById("documentation_options"));
                show(document.getElementById("extras_options"));
                hide(document.getElementById("about_options"));
            });

        document
            .getElementById("nav_about")
            ?.addEventListener("mouseenter", () => {
                hide(document.getElementById("documentation_options"));
                hide(document.getElementById("extras_options"));
                show(document.getElementById("about_options"));
            });

        document.getElementById("nav")?.addEventListener("mouseleave", (e) => {
            console.log("mouseleave");

            hide(document.getElementById("documentation_options"));
            hide(document.getElementById("extras_options"));
            hide(document.getElementById("about_options"));
        });
    };

    document.addEventListener("DOMContentLoaded", () => {
        if (navigator.maxTouchPoints > 0) addTouchListeners();
        else addDesktopListeners();
    });
</script>

<script is:inline>
    let nav_wrapper;

    const setOffset = (element) => {
        if (element !== null) {
            document.getElementById(
                element,
            ).style.top = `${nav_wrapper.offsetHeight}px`;
        }
    };

    const setHeight = (element) => {
        if (element !== null) {
            document.getElementById(
                element,
            ).style.maxHeight = `calc(100vh - ${nav_wrapper.offsetHeight}px)`;
        }
    };

    const setNav = () => {
        nav_wrapper = document.getElementById("nav_wrapper");
        document.documentElement.style.scrollPaddingTop = `${nav_wrapper.offsetHeight}px`;

        if (document.getElementById("toc_options")) {
            setHeight("toc_options");
            setOffset("toc_options");
        }

        setHeight("documentation_options");
        setHeight("extras_options");
        setHeight("about_options");

        setOffset("documentation_options");
        setOffset("extras_options");
        setOffset("about_options");
    };

    document.addEventListener("DOMContentLoaded", () => {
        setNav();

        window
            .matchMedia("(min-width: 768px)")
            .addEventListener("change", (e) => {
                setNav();
            });
    });
</script>
